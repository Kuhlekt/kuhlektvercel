"use server"

import { createClient } from "@/lib/supabase/server"
import { sendEmail } from "@/lib/aws-ses"

interface ROICalculation {
  companyName: string
  industry: string
  annualRevenue: number
  averageInvoiceValue: number
  invoicesPerMonth: number
  currentDSO: number
  targetDSO: number
  email: string
}

export async function sendROIReport(data: ROICalculation) {
  try {
    const annualInvoices = data.invoicesPerMonth * 12
    const currentAR = (data.currentDSO / 365) * data.annualRevenue
    const targetAR = (data.targetDSO / 365) * data.annualRevenue
    const cashFlowImprovement = currentAR - targetAR
    const percentageImprovement = ((data.currentDSO - data.targetDSO) / data.currentDSO) * 100

    const htmlContent = `
      <!DOCTYPE html>
      <html>
        <head>
          <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background-color: #2563eb; color: white; padding: 20px; text-align: center; }
            .content { padding: 20px; background-color: #f9fafb; }
            .metric { margin: 15px 0; padding: 15px; background-color: white; border-radius: 8px; }
            .metric-label { font-weight: bold; color: #4b5563; }
            .metric-value { font-size: 24px; color: #2563eb; font-weight: bold; }
            .footer { padding: 20px; text-align: center; color: #6b7280; font-size: 14px; }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <h1>Your ROI Analysis Report</h1>
              <p>${data.companyName}</p>
            </div>
            <div class="content">
              <h2>Financial Impact Summary</h2>
              <div class="metric">
                <div class="metric-label">Cash Flow Improvement</div>
                <div class="metric-value">$${cashFlowImprovement.toLocaleString("en-US", { maximumFractionDigits: 0 })}</div>
              </div>
              <div class="metric">
                <div class="metric-label">DSO Reduction</div>
                <div class="metric-value">${data.currentDSO} → ${data.targetDSO} days (${percentageImprovement.toFixed(1)}% improvement)</div>
              </div>
              <div class="metric">
                <div class="metric-label">Annual Revenue</div>
                <div class="metric-value">$${data.annualRevenue.toLocaleString("en-US")}</div>
              </div>
              <div class="metric">
                <div class="metric-label">Annual Invoices</div>
                <div class="metric-value">${annualInvoices.toLocaleString("en-US")}</div>
              </div>
              <h3>Next Steps</h3>
              <p>Schedule a personalized demo to see how Kuhlekt can help you achieve these results.</p>
            </div>
            <div class="footer">
              <p>This report was generated by Kuhlekt ROI Calculator</p>
              <p>© 2025 Kuhlekt. All rights reserved.</p>
            </div>
          </div>
        </body>
      </html>
    `

    const textContent = `
Your ROI Analysis Report - ${data.companyName}

Financial Impact Summary:
- Cash Flow Improvement: $${cashFlowImprovement.toLocaleString("en-US", { maximumFractionDigits: 0 })}
- DSO Reduction: ${data.currentDSO} → ${data.targetDSO} days (${percentageImprovement.toFixed(1)}% improvement)
- Annual Revenue: $${data.annualRevenue.toLocaleString("en-US")}
- Annual Invoices: ${annualInvoices.toLocaleString("en-US")}

Next Steps:
Schedule a personalized demo to see how Kuhlekt can help you achieve these results.

This report was generated by Kuhlekt ROI Calculator
© 2025 Kuhlekt. All rights reserved.
    `

    const result = await sendEmail({
      to: data.email,
      subject: `Your ROI Analysis Report - ${data.companyName}`,
      text: textContent,
      html: htmlContent,
    })

    return result
  } catch (error) {
    console.error("Error sending ROI report:", error)
    return {
      success: false,
      message: "Failed to send ROI report",
      error: error instanceof Error ? error.message : "Unknown error",
    }
  }
}

export async function generateVerificationCode(email: string) {
  try {
    const supabase = await createClient()
    const code = Math.floor(100000 + Math.random() * 900000).toString()
    const expiresAt = new Date(Date.now() + 10 * 60 * 1000)

    const { error: deleteError } = await supabase.from("verification_codes").delete().eq("email", email)

    if (deleteError) {
      console.error("Error deleting old codes:", deleteError)
    }

    const { error: insertError } = await supabase.from("verification_codes").insert({
      email,
      code,
      expires_at: expiresAt.toISOString(),
      attempts: 0,
    })

    if (insertError) {
      console.error("Error inserting verification code:", insertError)
      return {
        success: false,
        message: "Failed to generate verification code",
        error: insertError.message,
      }
    }

    const emailResult = await sendEmail({
      to: email,
      subject: "Your Verification Code - Kuhlekt ROI Calculator",
      text: `Your verification code is: ${code}\n\nThis code will expire in 10 minutes.\n\n© 2025 Kuhlekt. All rights reserved.`,
      html: `
        <!DOCTYPE html>
        <html>
          <head>
            <style>
              body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
              .container { max-width: 600px; margin: 0 auto; padding: 20px; }
              .header { background-color: #2563eb; color: white; padding: 20px; text-align: center; }
              .content { padding: 20px; background-color: #f9fafb; }
              .code { font-size: 32px; font-weight: bold; color: #2563eb; text-align: center; padding: 20px; background-color: white; border-radius: 8px; margin: 20px 0; letter-spacing: 8px; }
              .footer { padding: 20px; text-align: center; color: #6b7280; font-size: 14px; }
            </style>
          </head>
          <body>
            <div class="container">
              <div class="header">
                <h1>Email Verification</h1>
              </div>
              <div class="content">
                <p>Your verification code is:</p>
                <div class="code">${code}</div>
                <p>This code will expire in 10 minutes.</p>
                <p>If you didn't request this code, please ignore this email.</p>
              </div>
              <div class="footer">
                <p>© 2025 Kuhlekt. All rights reserved.</p>
              </div>
            </div>
          </body>
        </html>
      `,
    })

    if (!emailResult.success) {
      return emailResult
    }

    return {
      success: true,
      message: "Verification code sent successfully",
    }
  } catch (error) {
    console.error("Error generating verification code:", error)
    return {
      success: false,
      message: "Failed to generate verification code",
      error: error instanceof Error ? error.message : "Unknown error",
    }
  }
}

export async function verifyCode(email: string, code: string) {
  try {
    const supabase = await createClient()

    const { data, error } = await supabase
      .from("verification_codes")
      .select("*")
      .eq("email", email)
      .eq("code", code)
      .single()

    if (error || !data) {
      return {
        success: false,
        message: "Invalid verification code",
      }
    }

    if (new Date(data.expires_at) < new Date()) {
      await supabase.from("verification_codes").delete().eq("email", email)
      return {
        success: false,
        message: "Verification code has expired",
      }
    }

    if (data.attempts >= 3) {
      return {
        success: false,
        message: "Too many attempts. Please request a new code.",
      }
    }

    await supabase.from("verification_codes").delete().eq("email", email)

    return {
      success: true,
      message: "Email verified successfully",
    }
  } catch (error) {
    console.error("Error verifying code:", error)
    return {
      success: false,
      message: "Failed to verify code",
      error: error instanceof Error ? error.message : "Unknown error",
    }
  }
}
